{"version":3,"sources":["redux/pokecard-reducer.js","redux/navbar-reducer.js","Componetns/Hav/Navbar.js","Componetns/Hav/NavbarContainer.js","Componetns/Content/Card/PokeCards.js","Componetns/Content/Card/PokeCardContainer.js","Componetns/Content/Card/PokeCard.js","redux/card-reducer.js","Componetns/Content/Card/CardContainer.js","redux/auth-reducer.js","Common/Validators.js","Componetns/Login/Login.js","Componetns/Login/LoginContainer.js","assets/images/pokelogo.png","Componetns/Login/HeaderLogin.js","Componetns/Header/Header.js","Componetns/Header/HeaderContainer.js","App.js","redux/redux-store.js","reportWebVitals.js","index.js"],"names":["SET_POKE","SET_CURRENT_PAGE","SET_TOTAL_POKEMONS_COUNT","IS_FETCHING","initialState","pokemons","pageSize","totalCount","currentPage","isFetching","pokecardReducer","state","action","type","count","SET_TYPE_POKE","SET_SUBTYPE_POKE","typepoke","subtypepoke","navbarReducer","Navbar","props","React","setAge","handleChange","event","target","value","length","axios","then","setTypePoke","data","subtype","setSubtype","className","sx","minWidth","FormControl","fullWidth","InputLabel","Select","label","onChange","map","t","MenuItem","s","Button","connect","navbarPage","dispatch","setTypeAC","setSubTypeAC","PokeCards","pagesCount","Math","ceil","pages","i","push","items","usePagination","index","page","selected","item","children","style","fontWeight","undefined","variant","onClick","e","onPageChanged","Container","maxWidth","Grid","container","spacing","p","xs","sm","md","Card","CardMedia","to","id","src","images","small","CardContent","Typography","gutterBottom","component","name","types","artist","pokemonCardPage","setPokemons","setPokemonsAC","setCurrentPage","pageNumber","setPokemonsTotalCount","setPokemonsTotalCountAC","setIsFetching","setIsFetchingAC","card","LinearProgress","PokeCard","pokemonsProfile","display","history","goBack","Box","flexDirection","flex","Divider","number","rarity","supertype","nationalPokedexNumbers","hp","subtypes","attacks","text","damage","weaknesses","retreatCost","width","height","image","large","alt","SET_POKEMONS_PROFILE","cardReducer","CardContainer","pokeId","this","match","params","response","setPokemonsProfile","Component","WithUrlDataContainerComponent","withRouter","pokemonsProfilePage","IS_AUTH","isAuth","setIsAuthAC","authReducer","required","emailValidate","test","Login","TextField","placeholder","validate","setIsAuth","HeaderLogin","setAuth","FormControlLabel","control","Switch","checked","aria-label","disabled","pokelogo","HeaderContainer","App","from","exact","path","PokeCardContainer","LoginContainer","render","reducers","combineReducers","store","createStore","window","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdcdbb70.chunk.js","sourcesContent":["//import { pokeCardAPI } from '../Api/Api'\r\nconst SET_POKE = 'SET_POKE';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_POKEMONS_COUNT = 'SET_TOTAL_POKEMONS_COUNT';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\n\r\nlet initialState = {\r\n    pokemons: [],\r\n    pageSize: 250,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nconst pokecardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_POKE: {\r\n            return { ...state, pokemons: action.pokemons }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n\r\n        case SET_TOTAL_POKEMONS_COUNT: {\r\n            return { ...state, totalCount: action.count }\r\n        }\r\n\r\n        case IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemonsAC = (pokemons) => ({ type: SET_POKE, pokemons });\r\nexport const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setPokemonsTotalCountAC = (totalCount) => ({ type: SET_TOTAL_POKEMONS_COUNT, count: totalCount })\r\nexport const setIsFetchingAC = (isFetching) => ({type: IS_FETCHING, isFetching})\r\n\r\nexport default pokecardReducer;","const SET_TYPE_POKE = 'SET_TYPE_POKE';\r\nconst SET_SUBTYPE_POKE = 'SET_SUBTYPE_POKE';\r\n\r\nlet initialState = {\r\n    typepoke: [],\r\n    subtypepoke: [],\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TYPE_POKE: {\r\n            return { ...state, typepoke: action.typepoke }\r\n        }\r\n        case SET_SUBTYPE_POKE: {\r\n            return { ...state, subtypepoke: action.subtypepoke }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTypeAC = (typepoke) => ({ type: SET_TYPE_POKE, typepoke });\r\nexport const setSubTypeAC = (subtypepoke) => ({ type: SET_SUBTYPE_POKE, subtypepoke });\r\n\r\nexport default navbarReducer;","import Button from '@mui/material/Button';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport *as React from 'react';\r\nimport * as axios from \"axios\"\r\nimport './Navbar.css';\r\n\r\nlet Navbar = (props) => {\r\n    const [age, setAge] = React.useState('');\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n    if (props.typepoke.length === 0) {\r\n        axios.get(\"https://api.pokemontcg.io/v2/types\").then(type => {\r\n            props.setTypePoke(type.data.data)\r\n        });\r\n    }\r\n\r\n    if (props.subtypepoke.length === 0) {\r\n        axios.get(\"https://api.pokemontcg.io/v2/subtypes\").then(subtype => {\r\n            props.setSubtype(subtype.data.data)\r\n        });\r\n    }\r\n\r\n    return <div>\r\n        <div className='comboFilter'>\r\n            <div className='type-Block' sx={{ minWidth: 120 }}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select\r\n                        label=\"Type\"\r\n                        onChange={handleChange} >\r\n                        {props.typepoke.map(t => <MenuItem value={t}>{t}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className='subtype-Block' sx={{ minWidth: 120 }}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Subtype</InputLabel>\r\n                    <Select\r\n                        label=\"subType\"\r\n                        onChange={handleChange} >\r\n                        {props.subtypepoke.map(s => <MenuItem value={s}>{s}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className='button-Block'>\r\n                <Button>\r\n                    Получить\r\n                </Button>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setTypeAC, setSubTypeAC } from '../../redux/navbar-reducer';\r\nimport Navbar from './Navbar';\r\n\r\nlet NavbarContainer = (props) => {\r\n    return <>\r\n    <Navbar setTypePoke={props.setTypePoke} \r\n            setSubtype={props.setSubtype}/>\r\n    </>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        typepoke: state.navbarPage.typepoke,\r\n        subtypepoke: state.navbarPage.subtypepoke,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setTypePoke: (typepoke) => {\r\n            dispatch(setTypeAC(typepoke));\r\n        },\r\n        setSubtype: (subtypepoke) => {\r\n            dispatch(setSubTypeAC(subtypepoke));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import *as React from 'react'\r\nimport usePagination from '@mui/material/usePagination';\r\nimport Button from '@mui/material/Button';\r\nimport '../Content.css';\r\nimport '../../../App.css';\r\nimport { Card, CardContent, CardMedia, Container, Grid } from '@mui/material';\r\nimport NavbarContainer from '../../Hav/NavbarContainer';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nlet PokeCards = (props) => {\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const { items } = usePagination({\r\n        count: pagesCount,\r\n    });\r\n    if (!props.totalCount) {\r\n        <div className='preloader'> gg! </div>\r\n    } return (\r\n        <div>\r\n            <div className='App-navBar'>\r\n                <NavbarContainer />\r\n            </div>\r\n            <div className='pagination-Block'>\r\n                {items.map(({ page, type, selected, ...item }, index) => {\r\n                    let children = null;\r\n                    if (type === 'start-ellipsis' || type === 'end-ellipsis') {\r\n                        children = '…';\r\n                    } else if (type === 'page') {\r\n                        children = (\r\n                            <div\r\n                                type=\"button\"\r\n                                style={{\r\n                                    fontWeight: selected ? 'bold' : undefined,\r\n                                }}\r\n                                {...item}\r\n                            >\r\n                                {page}\r\n                            </div>\r\n                        );\r\n                    } else {\r\n                        children = (\r\n                            <div type=\"button\" {...item}>\r\n                                {type}\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return <Button variant=\"contained\" key={index} onClick={(e) => { props.onPageChanged(page); }}>{children}</Button>;\r\n                })}\r\n            </div>\r\n\r\n            <Container className=\"containerGrid\" maxWidth='md'>\r\n                <Grid container spacing={4}>\r\n                    {props.pokemons.map(p => <Grid className=\"cardGrid\" xs={12} sm={6} md={4} key={p.id}>\r\n                        <Card>\r\n                            <CardMedia className=\"cardMediaGrid\" xs={4} xs={8}>\r\n                                <NavLink to={'/cards/' + p.id}>  <img src={p.images.small} className='pokeCard' /> </NavLink>\r\n                                <CardContent className='cardContent'>\r\n                                    <Typography gutterBottom variant=\"h7\" component=\"div\">\r\n                                        <div>Имя:{p.name}</div>\r\n                                        <div>Тип:{p.types}</div>\r\n                                        <div>Хозяин:{p.artist}</div>\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardMedia>\r\n                        </Card>\r\n                    </Grid>)\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeCards;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setPokemonsAC, setCurrentPageAC, setPokemonsTotalCountAC, setIsFetchingAC } from '../../../redux/pokecard-reducer';\r\nimport PokeCards from './PokeCards';\r\nimport *as axios from 'axios';\r\nimport '../Content.css';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemonCardPage.pokemons,\r\n        pageSize: state.pokemonCardPage.pageSize,\r\n        totalCount: state.pokemonCardPage.totalCount,\r\n        currentPage: state.pokemonCardPage.currentPage,\r\n        isFetching: state.pokemonCardPage.isFetching,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPokemons: (pokemons) => {\r\n            dispatch(setPokemonsAC(pokemons));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setPokemonsTotalCount: (totalCount) => {\r\n            dispatch(setPokemonsTotalCountAC(totalCount))\r\n        },\r\n        setIsFetching: (isFetching) => {\r\n            dispatch(setIsFetchingAC(isFetching))\r\n        },\r\n    }\r\n\r\n}\r\n\r\nconst pokeCardContainer = (props) => {\r\n    if (props.pokemons.length === 0) {\r\n        props.setIsFetching(true);\r\n        axios.get(`https://api.pokemontcg.io/v2/cards?page=${props.currentPage}&count=${props.pageSize}`).then(card => {\r\n            props.setIsFetching(false);\r\n            props.setPokemons(card.data.data);\r\n            props.setPokemonsTotalCount(card.data.totalCount);\r\n        });\r\n    }\r\n    let onPageChanged = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber);\r\n        props.setIsFetching(true);\r\n        axios.get(`https://api.pokemontcg.io/v2/cards?page=${pageNumber}&count=${props.pageSize}`).then(card => {\r\n            props.setIsFetching(false);\r\n            props.setPokemons(card.data.data)\r\n        });\r\n    }\r\n     return ( <> \r\n        {props.isFetching ? <LinearProgress /> : null}\r\n            <PokeCards\r\n                totalCount={props.totalCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onPageChanged={onPageChanged}\r\n                pokemons={props.pokemons}\r\n                setPokemons={props.setPokemons}\r\n                setPokemonsTotalCount={props.setPokemonsTotalCount}\r\n                setCurrentPage={props.setCurrentPage}\r\n                isFetching={props.isFetching} />\r\n        </>\r\n    \r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(pokeCardContainer);\r\n","import * as React from 'react';\r\nimport './PokeCard.css';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { Divider } from '@material-ui/core';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst PokeCard = (props) => {\r\n    if (!props.pokemonsProfile) {\r\n        return <LinearProgress />\r\n    }\r\n    return (\r\n        <div className='pokeCard-Block'>\r\n            <Card sx={{ display: 'flex' }}>\r\n                <div className='buttonBack'>\r\n                    <Button variant=\"text\" onClick={() => props.history.goBack()}>Back</Button>\r\n                </div>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <CardContent sx={{ flex: '' }}>\r\n\r\n                        <div className='infoBlock'>\r\n                            <div><h2>{props.pokemonsProfile.data.name}</h2></div>\r\n                            <div className='general'>\r\n                                <h4>General informations</h4>\r\n                                <Divider />\r\n                                <div>Set identifier  {props.pokemonsProfile.data.number}</div>\r\n                                <div>{props.pokemonsProfile.data.rarity}  {props.pokemonsProfile.data.supertype}</div>\r\n                                <div>Illustrated by  {props.pokemonsProfile.data.artist}</div>\r\n                            </div>\r\n                            <div className='informations'>\r\n                                <h4>Vullaby's informations</h4>\r\n                                <Divider />\r\n                                <div>National Pokédex No  {props.pokemonsProfile.data.nationalPokedexNumbers}</div>\r\n                                <div>{props.pokemonsProfile.data.hp}  HP</div>\r\n                                <div>{props.pokemonsProfile.data.types}  type Card</div>\r\n                                <div>{props.pokemonsProfile.data.subtypes}  {props.pokemonsProfile.data.supertype}</div>\r\n                            </div>\r\n                            <div className='attacks'>\r\n                                <h4>Vullaby's Attacks</h4>\r\n                                <Divider />\r\n                                <div>{props.pokemonsProfile.data.attacks[0].name}</div>\r\n                                <div>{props.pokemonsProfile.data.attacks[0].text}</div>\r\n                                <div>{props.pokemonsProfile.data.attacks.name}\r\n                                    {props.pokemonsProfile.data.attacks.damage}</div>\r\n                            </div>\r\n                            <div className='foot'>\r\n                                <h4>Other Informations</h4>\r\n                                <Divider />\r\n                                {props.pokemonsProfile.data.weaknesses[0].type}\r\n                                {props.pokemonsProfile.data.weaknesses[0].value} <br />\r\n                                {props.pokemonsProfile.data.retreatCost}\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Box>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    sx={{\r\n                        width: 500,\r\n                        height: 700\r\n                    }}\r\n                    image={props.pokemonsProfile.data.images.large}\r\n                    alt=\"Live from space album cover\"\r\n                />\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\nexport default PokeCard;","const SET_POKEMONS_PROFILE = 'SET_POKEMONS_PROFILE';\r\n\r\nlet initialState = {\r\n    pokemonsProfile: null\r\n};\r\nconst cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POKEMONS_PROFILE: {\r\n            return { ...state, pokemonsProfile: action.pokemonsProfile }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemonsProfile = (pokemonsProfile) => ({ type: SET_POKEMONS_PROFILE, pokemonsProfile });\r\n\r\nexport default cardReducer;","import React from 'react';\r\nimport PokeCard from \"./PokeCard\";\r\nimport * as axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPokemonsProfile } from '../../../redux/card-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass CardContainer extends React.Component {\r\n    componentDidMount() {\r\n        let pokeId = this.props.match.params.pokeId;\r\n        axios.get(`https://api.pokemontcg.io/v2/cards/` + pokeId)\r\n            .then(response => {\r\n                this.props.setPokemonsProfile(response.data);\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <PokeCard {...this.props} pokemonsProfile={this.props.pokemonsProfile} />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    pokemonsProfile: state.pokemonsProfilePage.pokemonsProfile\r\n});\r\n\r\nlet WithUrlDataContainerComponent = withRouter(CardContainer);\r\n\r\nexport default connect(mapStateToProps, { setPokemonsProfile })(WithUrlDataContainerComponent);","const IS_AUTH = 'IS_AUTH';\r\n\r\nlet initialState = {\r\n    isAuth: true,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_AUTH: {\r\n            return { ...state, isAuth: action.isAuth }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setIsAuthAC = (isAuth) => ({type: IS_AUTH, isAuth})\r\n\r\nexport default authReducer;","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Поле пусто';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Максимальная длинна ${maxLength} символов`;\r\n    return undefined;\r\n}\r\n\r\nexport const emailValidate = value => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        return 'Не корректно введен email' }\r\n    else if (value) return undefined;\r\n        return 'Поле пусто'\r\n    }","import * as React from 'react';\r\nimport '../../App.css';\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField';\r\nimport { required, emailValidate } from '../../Common/Validators'\r\nimport { Redirect } from 'react-router'\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/\"} />\r\n    }\r\n    return (\r\n        <div className='login-Block'>\r\n            <div className='email'>\r\n                <TextField placeholder={\"Email\"}\r\n                    name={\"email\"}\r\n                    label='Email'\r\n                    validate={[emailValidate]}\r\n                //component={Input}\r\n                />\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <TextField\r\n                    placeholder={\"Password\"}\r\n                    name={\"password\"}\r\n                    label='Password'\r\n                    validate={[required]}\r\n                    //component={Input}\r\n                    type={\"password\"}\r\n                />\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <Button variant=\"contained\" onClick={() => props.setIsAuth(true)}>LogIn</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setIsAuthAC } from '../../redux/auth-reducer';\r\nimport Login from './Login';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\nconst LoginContainer = (props) => {\r\n    return (<div>\r\n        <div>\r\n            <Login\r\n                isAuth={props.isAuth}\r\n                setIsAuth={props.setIsAuth} />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","export default __webpack_public_path__ + \"static/media/pokelogo.08b3d8ee.png\";","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FormControlLabel, Switch, } from '@material-ui/core';\r\nimport { Box } from '@mui/system';\r\nimport '../../App.css';\r\n\r\nlet HeaderLogin = (props) => {\r\n    const [isAuth, setAuth] = React.useState(true);\r\n    const handleChange = (event) => {\r\n        props.setIsAuth(false);\r\n        setAuth(event.target.checked);\r\n    };\r\n    return (\r\n        <div >\r\n            <Box>\r\n                {!props.isAuth\r\n                    ? <Box>{props.isAuth}</Box>\r\n                    : <Box></Box>} </Box>\r\n            {props.isAuth ? <FormControlLabel  //переключение logIn, logAut\r\n                control={\r\n                    <Switch\r\n                        checked={props.isAuth}\r\n                        onChange={handleChange}\r\n                        aria-label=\"login switch\"\r\n                    />}\r\n                label={'Выйти'}\r\n            /> :\r\n                <FormControlLabel disabled\r\n                    control={\r\n                        <Switch />}\r\n                    label={<NavLink to={'/login'}>Войти</NavLink>} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderLogin;","import * as React from 'react';\r\nimport pokelogo from '../../assets/images/pokelogo.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { setIsAuthAC } from '../../redux/auth-reducer';\r\nimport './Header.css';\r\nimport { connect } from \"react-redux\";\r\nimport HeaderLogin from '../Login/HeaderLogin';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\nconst Header = (props) => {\r\n    const [isAuth, setAuth] = React.useState(true);\r\n    const handleChange = (event) => {\r\n        debugger;\r\n        props.setIsAuth(false);\r\n        setAuth(event.target.checked);\r\n    };\r\n    return (\r\n        <div>\r\n            <div className='back'>\r\n                <div className='logo'>\r\n                    <NavLink to={'/'}><img src={pokelogo} /></NavLink>\r\n                </div>\r\n                <div className='header-text'>\r\n                    <NavLink to={'/'}>\r\n                        <h1>\r\n                            Ultra Super Pokemon 5G Pro\r\n                        </h1>\r\n                    </NavLink>\r\n                </div>\r\n                <div className='login-block'>\r\n                    <HeaderLogin isAuth={props.isAuth}\r\n                        setIsAuth={props.setIsAuth} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux';\r\nimport { setIsAuthAC } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n","import './App.css';\r\nimport * as React from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport { Route } from 'react-router-dom';\r\nimport PokeCardContainer from './Componetns/Content/Card/PokeCardContainer';\r\nimport CardContainer from './Componetns/Content/Card/CardContainer';\r\nimport LoginContainer from './Componetns/Login/LoginContainer';\r\nimport HeaderContainer from './Componetns/Header/HeaderContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <HeaderContainer />\r\n      </header>\r\n      <div className='App-navBar'>\r\n      </div>\r\n      <div className='App-content'>\r\n        <div>\r\n          <Redirect from='/KODE_test/' to='/' />\r\n            <Route exact path='/' component={PokeCardContainer} />\r\n            <Route path='/login' component={LoginContainer} />\r\n            <Route path='/cards/:pokeId?' render={() => <CardContainer />} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport pokecardReducer from \"./pokecard-reducer\";\r\nimport cardReducer from \"./card-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    pokemonCardPage: pokecardReducer,\r\n    navbarPage: navbarReducer,\r\n    pokemonsProfilePage: cardReducer,\r\n    isAuth: authReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport './index.css';\r\nimport store from './redux/redux-store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fontsource/roboto/500.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}