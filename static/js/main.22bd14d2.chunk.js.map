{"version":3,"sources":["Api/Api.js","redux/pokecard-reducer.js","Componetns/Content/Card/Pokemon.js","Common/PaginatorUi.js","Componetns/Content/Card/PokeCards.js","Hoc/withAuthRedirect.js","Componetns/Content/Card/PokeCardContainer.js","redux/auth-reducer.js","Common/OTP.js","Componetns/Login/Login.js","Componetns/Login/LoginContainer.js","assets/images/pokelogo.png","Componetns/Login/HeaderLogin.js","Componetns/NavBar/NavBarButton.js","Componetns/Header/Header.js","Componetns/Header/HeaderContainer.js","Componetns/Login/Registration.js","Componetns/Login/RegistrationContainer.js","redux/navbar-reducer.js","Componetns/Filter/Filter.js","Componetns/Filter/FilterContainer.js","redux/card-reducer.js","Componetns/Content/Card/ProfileCard/ProfilePokeCard.js","Componetns/Content/Card/ProfileCard/ProfileCardContainer.js","App.js","redux/redux-store.js","reportWebVitals.js","index.js"],"names":["instance","axios","withCredentials","baseURL","headers","pokemonsAPI","currentPage","pageSize","get","then","card","data","profileCardAPI","pokeId","SET_POKE","SET_CURRENT_PAGE","SET_TOTAL_POKEMONS_COUNT","IS_FETCHING","initialState","pokemons","totalCount","isFetching","setIsFetchingAC","type","pokecardReducer","state","action","count","Pokemon","p","Card","CardMedia","className","xs","to","id","src","images","small","CardContent","Typography","gutterBottom","variant","component","name","types","artist","PaginatorUi","onPageChanged","pagesCount","Math","ceil","items","usePagination","selected","map","index","page","item","children","style","fontWeight","undefined","color","Button","onClick","e","PokeCards","props","Grid","container","pokemonCard","mapStateToPropsForRedirect","isAuth","withAuthRedirect","Component","RedirectComponent","localStorage","getItem","this","React","connect","pokeCardContainer","pageNumber","getPokemons","prevProps","prevState","console","log","LinearProgress","setPokemons","setPokemonsTotalCount","setCurrentPage","compose","pokemonCardPage","dispatch","a","IS_AUTH","ADD_USER","IS_US","loginAndPassword","username","login","password","isUs","setIsAuthAC","authReducer","user","newUserName","newUserLogin","pass","newUserPass","OTPgen","handleGenerate","bind","random","OTP","i","floor","setState","align","initialValues","kode","validate","values","errors","maxlength","handleClick","disabled","onClose","position","top","left","transform","width","bgcolor","border","boxShadow","Login","open","setOpen","handleOpen","handleClose","loginError","alert","myLog","isReg","l","Modal","Box","sx","setIsAuth","href","email","test","find","HeaderLogin","FormControlLabel","control","Switch","checked","onChange","label","NavBarButton","HeaderContainer","AddUserFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","Registration","reverse","value","newUserPass2","addUser","newId","newUserAC","SET_TYPE_POKE","SET_SUBTYPE_POKE","typepoke","subtypepoke","navbarReducer","Filter","setAge","handleChange","event","target","minWidth","FormControl","fullWidth","InputLabel","Select","t","MenuItem","s","navbarPage","setTypePoke","setTypeAC","setSubtype","setSubTypeAC","length","subtype","SET_POKEMONS_PROFILE","pokemonsProfile","cardReducer","ProfilePokeCard","display","history","goBack","flexDirection","flex","Divider","number","rarity","supertype","nationalPokedexNumbers","hp","subtypes","attacks","text","damage","weaknesses","retreatCost","height","marginTop","image","large","alt","ProfileCardContainer","match","params","response","setPokemonsProfile","pokemonsProfilePage","withRouter","App","from","path","render","PokeCardContainer","RegistrationContainer","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22bd14d2.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: false,\r\n    baseURL: `https://api.pokemontcg.io/v2/`,\r\n    headers: {\r\n        \"API-KEY\": \"23f9b782-c3a0-4db0-9226-4b0f37c76fb9\"\r\n    }\r\n});\r\n\r\nexport const pokemonsAPI = {\r\n    getPokemons(currentPage = 1, pageSize = 250) {\r\n        return instance.get(`cards?page=${currentPage}&count=${pageSize}`)\r\n            .then(card => {\r\n                return card.data;\r\n            });\r\n    }\r\n}\r\nexport const profileCardAPI = {\r\n    getCard(pokeId) {\r\n        return instance.get(`cards/` + pokeId);\r\n    }\r\n}","import { pokemonsAPI } from '../Api/Api'\r\n\r\nconst SET_POKE = 'SET_POKE';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_POKEMONS_COUNT = 'SET_TOTAL_POKEMONS_COUNT';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\n\r\nlet initialState = {\r\n    pokemons: [],\r\n    pageSize: 250,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nconst pokecardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_POKE: {\r\n            return { ...state, pokemons: action.pokemons }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n\r\n        case SET_TOTAL_POKEMONS_COUNT: {\r\n            return { ...state, totalCount: action.count }\r\n        }\r\n\r\n        case IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemonsAC = (pokemons) => ({ type: SET_POKE, pokemons });\r\nexport const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setPokemonsTotalCountAC = (totalCount) => ({ type: SET_TOTAL_POKEMONS_COUNT, count: totalCount })\r\nexport const setIsFetchingAC = (isFetching) => ({ type: IS_FETCHING, isFetching })\r\n\r\nexport const getPokemons = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetchingAC(true));\r\n        let card = await pokemonsAPI.getPokemons(currentPage, pageSize);\r\n            dispatch(setIsFetchingAC(false));\r\n            dispatch(setPokemonsAC(card.data));\r\n            dispatch(setPokemonsTotalCountAC(card.totalCount));\r\n    }\r\n}\r\n\r\n    export default pokecardReducer;","import React from 'react'\r\nimport { Card, CardContent, CardMedia } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Pokemon = ({ p, ...props }) => {\r\n    return (\r\n        <Card>\r\n            <CardMedia className=\"cardMediaGrid\" xs={4} xs={8}>\r\n                <NavLink to={'/cards/' + p.id}>\r\n                    <img src={p.images.small} className='pokeCard' /> </NavLink>\r\n                <CardContent className='cardContent'>\r\n                    <Typography gutterBottom variant=\"h7\" component=\"div\">\r\n                        <div>Имя:{p.name}</div>\r\n                        <div>Тип:{p.types}</div>\r\n                        <div>Хозяин:{p.artist}</div>\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardMedia>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Pokemon;","import * as React from 'react'\r\nimport usePagination from '@mui/material/usePagination';\r\nimport Button from '@mui/material/Button';\r\n\r\nlet PaginatorUi = ({ onPageChanged, pageSize, totalCount, currentPage }) => {\r\n  let pagesCount = Math.ceil(totalCount / pageSize); //вычисляем и рисуем все страницы\r\n  let { items } = usePagination({\r\n    count: pagesCount,\r\n    selected: currentPage\r\n  });\r\n\r\n  return ( //поведение пагинатора\r\n    <div>\r\n      {items.map(({ page, type, selected, ...item }, index) => {\r\n        let children = null;\r\n        if (type === 'start-ellipsis' || type === 'end-ellipsis') {\r\n          children = '…';\r\n        } else if (type === 'page') {\r\n          children = (\r\n            <div\r\n              type=\"button\"\r\n              style={{\r\n                fontWeight: selected ? 'bold' : undefined,\r\n                color: selected ? '#000' : undefined,\r\n              }}\r\n              {...item}\r\n            >\r\n              {page}\r\n            </div>\r\n          );\r\n        } else {\r\n          children = (\r\n            <div type=\"button\" {...item}>\r\n              {type}\r\n            </div>\r\n          );\r\n        }\r\n        return <Button variant=\"contained\" key={index} onClick={(e) => { onPageChanged(page); }}>{children}</Button>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginatorUi;","import *as React from 'react'\r\nimport '../Content.css';\r\nimport { Grid } from '@mui/material';\r\nimport Pokemon from './Pokemon';\r\nimport PaginatorUi from '../../../Common/PaginatorUi';\r\n\r\nlet PokeCards = (props) => {\r\n    return (\r\n        <>\r\n            <div className='pagination-Block'>\r\n                <PaginatorUi currentPage={props.currentPage}\r\n                    onPageChanged={props.onPageChanged}\r\n                    totalCount={props.totalCount}\r\n                    pagesCount={props.pagesCount}\r\n                    pageSize={props.pageSize} />\r\n            </div>\r\n            <Grid container className=\"containerGrid\">\r\n                {props.pokemons.map(pokemonCard =>\r\n                    <Pokemon p={pokemonCard} />)\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokeCards;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if ((localStorage.getItem('isAuth') == 'false') || (localStorage.getItem('isAuth') == '{\"isAuth\":\"\"}')) \r\n                return <Redirect to={'/login'} />\r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getPokemons } from '../../../redux/pokecard-reducer';\r\nimport PokeCards from './PokeCards';\r\nimport '../Content.css';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../Hoc/withAuthRedirect';\r\n\r\nclass pokeCardContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPokemons(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getPokemons(pageNumber, this.props.pageSize);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let a = this.state;\r\n        let b = this.props;\r\n        console.log('componentDidUpdate')\r\n    }\r\n    render() {\r\n        return (<>\r\n            {this.props.isFetching ? <LinearProgress /> : null}\r\n            <PokeCards\r\n                totalCount={this.props.totalCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                pokemons={this.props.pokemons}\r\n                setPokemons={this.props.setPokemons}\r\n                setPokemonsTotalCount={this.props.setPokemonsTotalCount}\r\n                setCurrentPage={this.props.setCurrentPage}\r\n                isFetching={this.props.isFetching} />\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemonCardPage.pokemons,\r\n        pageSize: state.pokemonCardPage.pageSize,\r\n        totalCount: state.pokemonCardPage.totalCount,\r\n        currentPage: state.pokemonCardPage.currentPage,\r\n        isFetching: state.pokemonCardPage.isFetching,\r\n        isAuth: state.isAuth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getPokemons }), withAuthRedirect)(pokeCardContainer);\r\n","const IS_AUTH = 'IS_AUTH';\r\nconst ADD_USER = 'ADD_USER';\r\nconst IS_US = 'IS_US';\r\n\r\nlet initialState = {\r\n    isAuth: '',\r\n    loginAndPassword: [\r\n        { id: 0, username: 'iqvver', login: 'iqvver@gmail.com', password: 1234 },\r\n        { id: 1, username: 'smart', login: 'smart@gamil.com', password: 1488 },\r\n    ],\r\n    isUs: 'onLine',\r\n\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_AUTH: {\r\n            return { ...state, isAuth: action.isAuth }\r\n        }\r\n        case IS_US: {\r\n            return { ...state, isUs: action.isUs }\r\n        }\r\n        case ADD_USER: {\r\n            let user = action.newUserName;\r\n            let login = action.newUserLogin;\r\n            let pass = action.newUserPass;\r\n\r\n            return {\r\n                ...state,\r\n                loginAndPassword: [...state.loginAndPassword,\r\n                {\r\n                    username: user,\r\n                    login: login,\r\n                    password: pass,\r\n                }]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setIsAuthAC = (isAuth) => ({ type: IS_AUTH, isAuth })\r\nexport const setIsUsAC = (isUs) => ({ type: IS_US, isUs})\r\nexport const newUserAC = (newUserName, newUserLogin, newUserPass) => ({ type: ADD_USER, newUserName, newUserLogin, newUserPass })\r\n\r\nexport default authReducer;","import { Button } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport '../Componetns/Login/Login.css';\r\n\r\nexport default class OTPgen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGenerate = this.handleGenerate.bind(this);\r\n        this.state = { random: '' };\r\n    }\r\n    handleGenerate() {\r\n        var digits = '0123456789';\r\n        let OTP = '';\r\n        for (let i = 0; i < 4; i++) {\r\n            OTP += digits[Math.floor(Math.random() * 10)];\r\n            this.setState({ random: OTP });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div align='center'>\r\n                <div>\r\n                    <Button onClick={this.handleGenerate.bind(this)}>Получить код</Button>\r\n                    <Box>Код: {this.state.random}</Box>\r\n                </div>\r\n                <Formik\r\n                    initialValues={{ kode: '' }}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        if (!values.kode) {\r\n                            errors.kode = 'The kode field is empty!!';\r\n                        } else if (values.kode != `${this.state.random}`) {\r\n                            errors.kode = 'The kode is not correct!';\r\n                        } return errors;\r\n                    }}>\r\n                    {({ values }) => (\r\n                        <Form>\r\n                            <Field className='otpForm'\r\n                                type=\"number\"\r\n                                name=\"kode\"\r\n                                maxlength=\"4\" />\r\n                            <ErrorMessage name=\"kode\" component=\"div\" />\r\n                            <br />\r\n                            {values.kode\r\n                                ? <Button onClick={\r\n                                    values.kode == `${this.state.random}` ?\r\n                                        this.props.handleClick : null}>LogIn</Button>\r\n                                : <Button disabled={true}>Login</Button>\r\n                            }\r\n\r\n\r\n                            <Button onClick={this.props.onClose}>Cansel</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport './Login.css';\r\nimport Button from '@mui/material/Button'\r\nimport { Redirect } from 'react-router'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport OTP from '../../Common/OTP';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '30%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst Login = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => setOpen(false);\r\n    if (localStorage.getItem('isAuth') === 'true') {\r\n        return <Redirect to={'/home'} />\r\n    }\r\n    let handleClick = () => {\r\n        localStorage.isAuth = true;\r\n        props.setIsAuth(true);\r\n    }\r\n    let loginError = () => {\r\n        alert('Логин или пароль не верны!')\r\n    }\r\n    const myLog = [...props.isReg].map(l =>\r\n        <div>\r\n            name:{l.username} <br />\r\n            login(email):{l.login} <br />\r\n            password:{l.password}\r\n        </div>);\r\n\r\n    return (\r\n        <div className='loginForm'>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}>\r\n                <Box sx={style}>\r\n                    <Typography variant=\"h6\" align='center'>\r\n                        Введите код для того, что-бы войти?\r\n                    </Typography>\r\n                    <OTP handleClick={handleClick}\r\n                        onClose={handleClose} />\r\n                </Box>\r\n            </Modal>\r\n            <Button href=\"#Login\">Sign In</Button>\r\n            <Button href=\"#Registration\">Registration</Button>\r\n            <div className='loginBlock'>\r\n                <h2>Please enter your login(email) and password!</h2>\r\n                <Formik\r\n                    initialValues={{ email: '', password: '' }}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        if (!values.email) {\r\n                            errors.email = 'The email field is empty!';\r\n                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n                        ) {\r\n                            errors.email = 'Email is not entered correctly';\r\n                        }\r\n                        if (!values.password) {\r\n                            errors.password = 'The password field is empty!!';\r\n                        } return errors;\r\n                    }}\r\n                >\r\n                    {({ values }) => (\r\n                        <Form>\r\n                            <Field\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                            />\r\n                            <ErrorMessage name=\"email\" component=\"div\" />\r\n                            <br />\r\n                            <Field\r\n                                type=\"password\"\r\n                                name=\"password\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <br />\r\n                            <Button onClick={props.isReg.find(item =>\r\n                                item.login == values.email && item.password == values.password)\r\n                                ? handleOpen : loginError }>LogIn</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                <div>\r\n                    {myLog}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setIsAuthAC } from '../../redux/auth-reducer';\r\nimport Login from './Login';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n        isReg: state.isAuth.loginAndPassword,\r\n        isUs: state.isAuth.isUs\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\nconst LoginContainer = (props) => {\r\n    return (<div>\r\n        <div>\r\n            <Login\r\n                isAuth={props.isAuth}\r\n                setIsAuth={props.setIsAuth}\r\n                isReg={props.isReg}\r\n                isUs={props.isUs} />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","export default __webpack_public_path__ + \"static/media/pokelogo.08b3d8ee.png\";","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FormControlLabel, Switch, } from '@material-ui/core';\r\n\r\nlet HeaderLogin = (props) => {\r\n    let handleClick = () => {\r\n        localStorage.isAuth = false;\r\n        props.setIsAuth(false);\r\n    }\r\n    return (\r\n        <div>\r\n            {localStorage.getItem('isAuth') == 'true' ?\r\n                props.setIsAuth(true) || <div>\r\n                    {props.isUs}\r\n                </div> : props.setIsAuth(false) || <div>offLne</div>}\r\n\r\n            {localStorage.getItem('isAuth') == 'true'\r\n                ? <FormControlLabel  //переключение logIn, logAut\r\n                    control={\r\n                        <Switch\r\n                            checked={localStorage.isAuth}\r\n                            onChange={handleClick}\r\n                            aria-label=\"login switch\"\r\n                        />}\r\n                    label={'Выйти'} />\r\n                : <FormControlLabel disabled\r\n                    control={\r\n                        <Switch /> }\r\n                    label={<NavLink to={'/login'}></NavLink>} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderLogin;","import * as React from 'react';\r\nimport './NavBarButton.css';\r\n\r\nconst NavBarButton = () => {\r\n    return (\r\n        <div className='nav-block'>\r\n            <a href='/home'>\r\n                <span>All Pokemons</span>\r\n                <span>All Pokemons</span>\r\n            </a>\r\n            <a href='/home#/filter'>\r\n                <span>Filter out Pokemon</span>\r\n                <span>Filter out Pokemon</span>\r\n            </a>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default NavBarButton;","import * as React from 'react';\r\nimport pokelogo from '../../assets/images/pokelogo.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { setIsAuthAC } from '../../redux/auth-reducer';\r\nimport './Header.css';\r\nimport { connect } from \"react-redux\";\r\nimport HeaderLogin from '../Login/HeaderLogin';\r\nimport NavBarButton from '../NavBar/NavBarButton';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n        isUs: state.isAuth.isUs\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <div className='back'>\r\n                {/*<div className='logo'>\r\n                    <NavLink to={'/home'}><img src={pokelogo} /></NavLink>\r\n    </div>*/}\r\n                <div className='header-text'>\r\n                    <NavLink to={'/home'}>\r\n                        <h1>\r\n                            Ultra Super Pokemon 5G Pro\r\n                        </h1>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className='nav-bar'>\r\n                    <div className='login-block'>\r\n                        <HeaderLogin isAuth={props.isAuth}\r\n                            isUs={props.isUs}\r\n                            setIsAuth={props.setIsAuth} />\r\n                    </div>\r\n                    <NavBarButton />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux';\r\nimport { setIsAuthAC } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n        isUs: state.isAuth.isUs\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n","import * as React from 'react';\r\nimport './Login.css';\r\nimport Button from '@mui/material/Button'\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst Registration = (props) => {\r\n    let myLog = [...props.loginAndPassword].reverse().map(l =>\r\n        <div>\r\n            name:{l.username} <br />\r\n            login(email):{l.login} <br />\r\n            password:{l.password}\r\n        </div>);\r\n    let addNewUser = (value) => {\r\n        if (value.newUserPass === value.newUserPass2) {\r\n            props.addUser(value.newUserName, value.newUserLogin, value.newUserPass);\r\n            alert('Все ОК');\r\n        }\r\n        else if (value.newUserPass !== value.newUserPass2)\r\n            alert('Пароли не совпадают');\r\n    }\r\n    return (\r\n        <div className='registrationForm'>\r\n            <Button href=\"#Login\">Sign In</Button>\r\n            <Button href=\"#Registration\">Registration</Button>\r\n            <div>\r\n                <AddUserFormRedux onSubmit={addNewUser} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyUser = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className='registrationBlock'>\r\n                <h2>Enter the registration details.</h2>\r\n                <div className='inputWrapper'>\r\n                    <Field className='fieldEmail'\r\n                        name='newUserName'\r\n                        component='input'\r\n                        type='text'\r\n                        placeholder='Enter your name' />\r\n                    <br />\r\n                    <Field className='inputEmail'\r\n                        name='newUserLogin'\r\n                        type='email'\r\n                        component='input'\r\n                        placeholder='Your email' />\r\n                    <br />\r\n                    <input className='inputPass'\r\n                        name='newUserPass'\r\n                        component='input'\r\n                        type=\"password\"\r\n                        placeholder='Your password' />\r\n                    <br />\r\n                    <Field className='inputPassTo'\r\n                        name='newUserPass2'\r\n                        component='input'\r\n                        type=\"text\"\r\n                        placeholder='Repeat the password' />\r\n                    <br />\r\n                    <div>\r\n                        <button>Registration</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddUserFormRedux = reduxForm({\r\n    form: 'userAddForm',\r\n})(MyUser);\r\n\r\nexport default Registration;","import { connect } from 'react-redux';\r\nimport { newUserAC, } from \"../../redux/auth-reducer\";\r\nimport Registration from './Registration';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth,\r\n        loginAndPassword: state.isAuth.loginAndPassword,\r\n        newUserName: state.isAuth.newUserName,\r\n        newUserLogin: state.isAuth.newUserLogin,\r\n        newUserPass: state.isAuth.newUserPass,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUser: (newUserName, newUserLogin, newUserPass, newId) => {\r\n            dispatch(newUserAC(newUserName, newUserLogin, newUserPass, newId));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\r\n","const SET_TYPE_POKE = 'SET_TYPE_POKE';\r\nconst SET_SUBTYPE_POKE = 'SET_SUBTYPE_POKE';\r\n\r\nlet initialState = {\r\n    typepoke: [],\r\n    subtypepoke: [],\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TYPE_POKE: {\r\n            return { ...state, typepoke: action.typepoke }\r\n        }\r\n        case SET_SUBTYPE_POKE: {\r\n            return { ...state, subtypepoke: action.subtypepoke }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTypeAC = (typepoke) => ({ type: SET_TYPE_POKE, typepoke });\r\nexport const setSubTypeAC = (subtypepoke) => ({ type: SET_SUBTYPE_POKE, subtypepoke });\r\n\r\nexport default navbarReducer;","import Button from '@mui/material/Button';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport * as React from 'react';\r\nimport './Filter.css';\r\n\r\nlet Filter = (props) => {\r\n    const [ , setAge] = React.useState('');\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    return <div>\r\n        <div className='comboFilter'>\r\n            <div className='type-Block' sx={{ minWidth: 120 }}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select\r\n                        label=\"Type\"\r\n                        onChange={handleChange} >\r\n                        {props.typepoke.map(t => <MenuItem value={t}>{t}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className='subtype-Block' sx={{ minWidth: 120 }}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Subtype</InputLabel>\r\n                    <Select\r\n                        label=\"subType\"\r\n                        onChange={handleChange} >\r\n                        {props.subtypepoke.map(s => <MenuItem value={s}>{s}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className='button-Block'>\r\n                <Button>\r\n                    Получить\r\n                </Button>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Filter;","import * as React from 'react';\r\nimport * as axios from \"axios\"\r\nimport { connect } from \"react-redux\";\r\nimport { setTypeAC, setSubTypeAC } from '../../redux/navbar-reducer';\r\nimport Filter from './Filter';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        typepoke: state.navbarPage.typepoke,\r\n        subtypepoke: state.navbarPage.subtypepoke,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setTypePoke: (typepoke) => {\r\n            dispatch(setTypeAC(typepoke));\r\n        },\r\n        setSubtype: (subtypepoke) => {\r\n            dispatch(setSubTypeAC(subtypepoke));\r\n        }\r\n    }\r\n}\r\n\r\nlet FilterContainer = (props) => {\r\n    if (props.typepoke.length === 0) {\r\n        axios.get(\"https://api.pokemontcg.io/v2/types\").then(type => {\r\n            props.setTypePoke(type.data.data)\r\n        });\r\n    }\r\n    if (props.subtypepoke.length === 0) {\r\n        axios.get(\"https://api.pokemontcg.io/v2/subtypes\").then(subtype => {\r\n            props.setSubtype(subtype.data.data)\r\n        });\r\n    }\r\n    return <>\r\n        <Filter typepoke={props.typepoke}\r\n            subtypepoke={props.subtypepoke} />\r\n    </>\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(FilterContainer);\r\n","const SET_POKEMONS_PROFILE = 'SET_POKEMONS_PROFILE';\r\n\r\nlet initialState = {\r\n    pokemonsProfile: null\r\n};\r\nconst cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POKEMONS_PROFILE: {\r\n            return { ...state, pokemonsProfile: action.pokemonsProfile }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemonsProfile = (pokemonsProfile) => ({ type: SET_POKEMONS_PROFILE, pokemonsProfile });\r\n\r\nexport default cardReducer;","import * as React from 'react';\r\nimport './ProfilePokeCard.css';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { Divider } from '@material-ui/core';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst ProfilePokeCard = (props) => {\r\n    if (!props.pokemonsProfile) {\r\n        return <LinearProgress />\r\n    }\r\n    return (\r\n        <div className='pokeCard-Block'>\r\n            <Card sx={{ display: 'flex' }}>\r\n                <div className='buttonBack'>\r\n                    <Button variant=\"text\" onClick={() => props.history.goBack()}>Back</Button>\r\n                </div>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <CardContent sx={{ flex: '' }}>\r\n\r\n                        <div className='infoBlock'>\r\n                            <div><h2>{props.pokemonsProfile.data.name}</h2></div>\r\n                            <div className='general'>\r\n                                <h4>General informations</h4>\r\n                                <Divider />\r\n                                <div>Set identifier  {props.pokemonsProfile.data.number}</div>\r\n                                <div>{props.pokemonsProfile.data.rarity}  {props.pokemonsProfile.data.supertype}</div>\r\n                                <div>Illustrated by  {props.pokemonsProfile.data.artist}</div>\r\n                            </div>\r\n                            <div className='informations'>\r\n                                <h4>Vullaby's informations</h4>\r\n                                <Divider />\r\n                                <div>National Pokédex No  {props.pokemonsProfile.data.nationalPokedexNumbers}</div>\r\n                                <div>{props.pokemonsProfile.data.hp}  HP</div>\r\n                                <div>{props.pokemonsProfile.data.types}  type Card</div>\r\n                                <div>{props.pokemonsProfile.data.subtypes}  {props.pokemonsProfile.data.supertype}</div>\r\n                            </div>\r\n                            <div className='attacks'>\r\n                                <h4>Vullaby's Attacks</h4>\r\n                                <Divider />\r\n                                <div>{props.pokemonsProfile.data.attacks[0].name}</div>\r\n                                <div>{props.pokemonsProfile.data.attacks[0].text}</div>\r\n                                <div>{props.pokemonsProfile.data.attacks.name}\r\n                                    {props.pokemonsProfile.data.attacks.damage}</div>\r\n                            </div>\r\n                            <div className='foot'>\r\n                                <h4>Other Informations</h4>\r\n                                <Divider />\r\n                                {props.pokemonsProfile.data.weaknesses[0].type}\r\n                                {props.pokemonsProfile.data.weaknesses[0].value} <br />\r\n                                {props.pokemonsProfile.data.retreatCost}\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Box>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    sx={{\r\n                        width: 500,\r\n                        height: 700,\r\n                        marginTop: 5\r\n                    }}\r\n                    image={props.pokemonsProfile.data.images.large}\r\n                    alt=\"Live from space album cover\"\r\n                />\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\nexport default ProfilePokeCard;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setPokemonsProfile } from '../../../../redux/card-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../../Hoc/withAuthRedirect';\r\nimport { profileCardAPI } from '../../../../Api/Api';\r\nimport ProfilePokeCard from './ProfilePokeCard';\r\n\r\nclass ProfileCardContainer extends React.Component {\r\n    componentDidMount() {\r\n        let pokeId = this.props.match.params.pokeId;\r\n        profileCardAPI.getCard(pokeId).then(response => {\r\n            this.props.setPokemonsProfile(response.data);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <ProfilePokeCard {...this.props} pokemonsProfile={this.props.pokemonsProfile} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    pokemonsProfile: state.pokemonsProfilePage.pokemonsProfile\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, { setPokemonsProfile }),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileCardContainer);","import './App.css';\r\nimport * as React from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport { Route } from 'react-router-dom';\r\nimport PokeCardContainer from './Componetns/Content/Card/PokeCardContainer';\r\nimport LoginContainer from './Componetns/Login/LoginContainer';\r\nimport HeaderContainer from './Componetns/Header/HeaderContainer';\r\nimport RegistrationContainer from './Componetns/Login/RegistrationContainer'\r\nimport FilterContainer from './Componetns/Filter/FilterContainer';\r\nimport ProfileCardContainer from './Componetns/Content/Card/ProfileCard/ProfileCardContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <HeaderContainer />\r\n      </header>\r\n      <div className='App-navBar'>\r\n        \r\n      </div>\r\n      <div className='App-content'>\r\n        <div>\r\n          <Redirect from=\"/\" to=\"/login\" />\r\n          <Route path='/home' render={() => <PokeCardContainer />} />\r\n          <Route path='/login' render={() => <LoginContainer />} />\r\n          <Route path='/cards/:pokeId?' render={() => <ProfileCardContainer />} />\r\n          <Route path='/registration' render={() => <RegistrationContainer />} />\r\n          <Route path='/filter' render={() => <FilterContainer />} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\"\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport pokecardReducer from \"./pokecard-reducer\";\r\nimport cardReducer from \"./card-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n    pokemonCardPage: pokecardReducer,\r\n    navbarPage: navbarReducer,\r\n    pokemonsProfilePage: cardReducer,\r\n    isAuth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport './index.css';\r\nimport store from './redux/redux-store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fontsource/roboto/500.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      \r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>\r\n      \r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}