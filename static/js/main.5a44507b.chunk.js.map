{"version":3,"sources":["redux/pokecard-reducer.js","Componetns/Content/Card/PokeCards.js","Componetns/Content/Card/PokeCardContainer.js","Componetns/Content/Card/PokeCard.js","redux/card-reducer.js","Componetns/Content/Card/CardContainer.js","redux/auth-reducer.js","Common/OTP.js","Componetns/Login/Login.js","Componetns/Login/LoginContainer.js","assets/images/pokelogo.png","Componetns/Login/HeaderLogin.js","Componetns/Header/Header.js","Componetns/Header/HeaderContainer.js","Componetns/Login/Registration.js","Componetns/Login/RegistrationContainer.js","App.js","redux/navbar-reducer.js","redux/redux-store.js","reportWebVitals.js","index.js"],"names":["SET_POKE","SET_CURRENT_PAGE","SET_TOTAL_POKEMONS_COUNT","IS_FETCHING","initialState","pokemons","pageSize","totalCount","currentPage","isFetching","pokecardReducer","state","action","type","count","PokeCards","props","pagesCount","Math","ceil","pages","i","push","items","usePagination","className","map","index","page","selected","item","children","Button","disabled","variant","style","fontWeight","undefined","color","onClick","onPageChanged","Grid","container","p","Card","CardMedia","xs","to","id","src","images","small","CardContent","Typography","gutterBottom","component","name","types","artist","connect","pokemonCardPage","isAuth","dispatch","setPokemons","setPokemonsAC","setCurrentPage","pageNumber","setPokemonsTotalCount","setPokemonsTotalCountAC","setIsFetching","setIsFetchingAC","localStorage","getItem","length","axios","then","card","data","LinearProgress","PokeCard","pokemonsProfile","sx","display","history","goBack","Box","flexDirection","flex","Divider","number","rarity","supertype","nationalPokedexNumbers","hp","subtypes","attacks","text","damage","weaknesses","value","retreatCost","width","height","marginTop","image","large","alt","SET_POKEMONS_PROFILE","cardReducer","CardContainer","pokeId","this","match","params","response","setPokemonsProfile","React","Component","WithUrlDataContainerComponent","withRouter","pokemonsProfilePage","IS_AUTH","ADD_USER","IS_US","loginAndPassword","username","login","password","isUs","setIsAuthAC","authReducer","user","newUserName","newUserLogin","pass","newUserPass","OTPgen","handleGenerate","bind","random","OTP","floor","setState","align","initialValues","kode","validate","values","errors","maxlength","handleClick","onClose","position","top","left","transform","bgcolor","border","boxShadow","Login","open","setOpen","handleOpen","handleClose","myLog","isReg","l","Modal","setIsAuth","href","email","test","find","HeaderLogin","FormControlLabel","control","Switch","checked","onChange","label","HeaderContainer","refreshAuth","prevProps","prevState","snapshot","AddUserFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","Registration","reverse","newUserPass2","addUser","alert","newId","newUserAC","App","from","path","render","PokeCardContainer","RegistrationContainer","SET_TYPE_POKE","SET_SUBTYPE_POKE","typepoke","subtypepoke","navbarReducer","reducers","combineReducers","navbarPage","formReducer","store","createStore","window","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a44507b.chunk.js","sourcesContent":["//import { pokeCardAPI } from '../Api/Api'\r\nconst SET_POKE = 'SET_POKE';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_POKEMONS_COUNT = 'SET_TOTAL_POKEMONS_COUNT';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\n\r\nlet initialState = {\r\n    pokemons: [],\r\n    pageSize: 250,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nconst pokecardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_POKE: {\r\n            return { ...state, pokemons: action.pokemons }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n\r\n        case SET_TOTAL_POKEMONS_COUNT: {\r\n            return { ...state, totalCount: action.count }\r\n        }\r\n\r\n        case IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemonsAC = (pokemons) => ({ type: SET_POKE, pokemons });\r\nexport const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setPokemonsTotalCountAC = (totalCount) => ({ type: SET_TOTAL_POKEMONS_COUNT, count: totalCount })\r\nexport const setIsFetchingAC = (isFetching) => ({type: IS_FETCHING, isFetching})\r\n\r\nexport default pokecardReducer;","import *as React from 'react'\r\nimport usePagination from '@mui/material/usePagination';\r\nimport Button from '@mui/material/Button';\r\nimport '../Content.css';\r\nimport { Card, CardContent, CardMedia, Grid } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nlet PokeCards = (props) => {\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const { items } = usePagination({\r\n        count: pagesCount,\r\n    });\r\n    return (\r\n        <div>\r\n            <div className='pagination-Block'>\r\n                {items.map(({ page, type, selected, ...item }, index) => {\r\n                    let children = null;\r\n                    if (type === 'start-ellipsis' || type === 'end-ellipsis') { children = (<Button disabled variant=\"contained\"> ... </Button>); }\r\n                    else if (type === 'page') {\r\n                        children = (\r\n                            <Button variant=\"contained\"\r\n                                style={{\r\n                                    fontWeight: selected ? 'bold' : undefined,\r\n                                    color: selected ? '#000' : undefined,\r\n                                }}\r\n                                {...item}>\r\n                                {page}\r\n                            </Button>\r\n                        );\r\n                    } else {\r\n                        children = (\r\n                            <Button variant=\"contained\"  {...item}>{type}</Button>\r\n                        );\r\n                    }\r\n                    return <span key={index} onClick={() => { props.onPageChanged(page); }}>{children}</span>;\r\n                })}\r\n            </div>\r\n            <Grid container className=\"containerGrid\">\r\n                {props.pokemons.map(p => <Grid className=\"cardGrid\" key={p.id}>\r\n                    <Card>\r\n                        <CardMedia className=\"cardMediaGrid\" xs={4} xs={8}>\r\n                            <NavLink to={'/cards/' + p.id}>  <img src={p.images.small} className='pokeCard' /> </NavLink>\r\n                            <CardContent className='cardContent'>\r\n                                <Typography gutterBottom variant=\"h7\" component=\"div\">\r\n                                    <div>Имя:{p.name}</div>\r\n                                    <div>Тип:{p.types}</div>\r\n                                    <div>Хозяин:{p.artist}</div>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardMedia>\r\n                    </Card>\r\n                </Grid>)\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeCards;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setPokemonsAC, setCurrentPageAC, setPokemonsTotalCountAC, setIsFetchingAC } from '../../../redux/pokecard-reducer';\r\nimport PokeCards from './PokeCards';\r\nimport *as axios from 'axios';\r\nimport { Redirect } from 'react-router'\r\nimport '../Content.css';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemonCardPage.pokemons,\r\n        pageSize: state.pokemonCardPage.pageSize,\r\n        totalCount: state.pokemonCardPage.totalCount,\r\n        currentPage: state.pokemonCardPage.currentPage,\r\n        isFetching: state.pokemonCardPage.isFetching,\r\n        isAuth: state.isAuth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPokemons: (pokemons) => {\r\n            dispatch(setPokemonsAC(pokemons));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setPokemonsTotalCount: (totalCount) => {\r\n            dispatch(setPokemonsTotalCountAC(totalCount))\r\n        },\r\n        setIsFetching: (isFetching) => {\r\n            dispatch(setIsFetchingAC(isFetching))\r\n        },\r\n    }\r\n}\r\n\r\nconst pokeCardContainer = (props) => {\r\n    if ((localStorage.getItem('isAuth') == 'false') || (localStorage.getItem('isAuth') == '{\"isAuth\":\"\"}')) {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n    if (props.pokemons.length === 0) {\r\n        props.setIsFetching(true);\r\n        axios.get(`https://api.pokemontcg.io/v2/cards?page=${props.currentPage}&count=${props.pageSize}`).then(card => {\r\n            props.setIsFetching(false);\r\n            props.setPokemons(card.data.data);\r\n            props.setPokemonsTotalCount(card.data.totalCount);\r\n        });\r\n    }\r\n    let onPageChanged = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber);\r\n        props.setIsFetching(true);\r\n        axios.get(`https://api.pokemontcg.io/v2/cards?page=${pageNumber}&count=${props.pageSize}`).then(card => {\r\n            props.setIsFetching(false);\r\n            props.setPokemons(card.data.data)\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        {props.isFetching ? <LinearProgress /> : null}\r\n        <PokeCards\r\n            totalCount={props.totalCount}\r\n            pageSize={props.pageSize}\r\n            currentPage={props.currentPage}\r\n            onPageChanged={onPageChanged}\r\n            pokemons={props.pokemons}\r\n            setPokemons={props.setPokemons}\r\n            setPokemonsTotalCount={props.setPokemonsTotalCount}\r\n            setCurrentPage={props.setCurrentPage}\r\n            isFetching={props.isFetching} />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(pokeCardContainer);\r\n","import * as React from 'react';\r\nimport './PokeCard.css';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { Divider } from '@material-ui/core';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst PokeCard = (props) => {\r\n    if (!props.pokemonsProfile) {\r\n        return <LinearProgress />\r\n    }\r\n    return (\r\n        <div className='pokeCard-Block'>\r\n            <Card sx={{ display: 'flex' }}>\r\n                <div className='buttonBack'>\r\n                    <Button variant=\"text\" onClick={() => props.history.goBack()}>Back</Button>\r\n                </div>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <CardContent sx={{ flex: '' }}>\r\n\r\n                        <div className='infoBlock'>\r\n                            <div><h2>{props.pokemonsProfile.data.name}</h2></div>\r\n                            <div className='general'>\r\n                                <h4>General informations</h4>\r\n                                <Divider />\r\n                                <div>Set identifier  {props.pokemonsProfile.data.number}</div>\r\n                                <div>{props.pokemonsProfile.data.rarity}  {props.pokemonsProfile.data.supertype}</div>\r\n                                <div>Illustrated by  {props.pokemonsProfile.data.artist}</div>\r\n                            </div>\r\n                            <div className='informations'>\r\n                                <h4>Vullaby's informations</h4>\r\n                                <Divider />\r\n                                <div>National Pokédex No  {props.pokemonsProfile.data.nationalPokedexNumbers}</div>\r\n                                <div>{props.pokemonsProfile.data.hp}  HP</div>\r\n                                <div>{props.pokemonsProfile.data.types}  type Card</div>\r\n                                <div>{props.pokemonsProfile.data.subtypes}  {props.pokemonsProfile.data.supertype}</div>\r\n                            </div>\r\n                            <div className='attacks'>\r\n                                <h4>Vullaby's Attacks</h4>\r\n                                <Divider />\r\n                                <div>{props.pokemonsProfile.data.attacks[0].name}</div>\r\n                                <div>{props.pokemonsProfile.data.attacks[0].text}</div>\r\n                                <div>{props.pokemonsProfile.data.attacks.name}\r\n                                    {props.pokemonsProfile.data.attacks.damage}</div>\r\n                            </div>\r\n                            <div className='foot'>\r\n                                <h4>Other Informations</h4>\r\n                                <Divider />\r\n                                {props.pokemonsProfile.data.weaknesses[0].type}\r\n                                {props.pokemonsProfile.data.weaknesses[0].value} <br />\r\n                                {props.pokemonsProfile.data.retreatCost}\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Box>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    sx={{\r\n                        width: 500,\r\n                        height: 700,\r\n                        marginTop: 5\r\n                    }}\r\n                    image={props.pokemonsProfile.data.images.large}\r\n                    alt=\"Live from space album cover\"\r\n                />\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\nexport default PokeCard;","const SET_POKEMONS_PROFILE = 'SET_POKEMONS_PROFILE';\r\n\r\nlet initialState = {\r\n    pokemonsProfile: null\r\n};\r\nconst cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POKEMONS_PROFILE: {\r\n            return { ...state, pokemonsProfile: action.pokemonsProfile }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemonsProfile = (pokemonsProfile) => ({ type: SET_POKEMONS_PROFILE, pokemonsProfile });\r\n\r\nexport default cardReducer;","import React from 'react';\r\nimport PokeCard from \"./PokeCard\";\r\nimport * as axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPokemonsProfile } from '../../../redux/card-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass CardContainer extends React.Component {\r\n    componentDidMount() {\r\n        let pokeId = this.props.match.params.pokeId;\r\n        axios.get(`https://api.pokemontcg.io/v2/cards/` + pokeId)\r\n            .then(response => {\r\n                this.props.setPokemonsProfile(response.data);\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <PokeCard {...this.props} pokemonsProfile={this.props.pokemonsProfile} />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    pokemonsProfile: state.pokemonsProfilePage.pokemonsProfile\r\n});\r\n\r\nlet WithUrlDataContainerComponent = withRouter(CardContainer);\r\n\r\nexport default connect(mapStateToProps, { setPokemonsProfile })(WithUrlDataContainerComponent);","const IS_AUTH = 'IS_AUTH';\r\nconst ADD_USER = 'ADD_USER';\r\nconst IS_US = 'IS_US';\r\n\r\nlet initialState = {\r\n    isAuth: '',\r\n    loginAndPassword: [\r\n        { id: 0, username: 'iqvver', login: 'iqvver@gamil.com', password: 1234 },\r\n        { id: 1, username: 'smart', login: 'smart@gamil.com', password: 1488 },\r\n    ],\r\n    isUs: 'onLine',\r\n\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_AUTH: {\r\n            return { ...state, isAuth: action.isAuth }\r\n        }\r\n        case IS_US: {\r\n            return { ...state, isUs: action.isUs }\r\n        }\r\n        case ADD_USER: {\r\n            let user = action.newUserName;\r\n            let login = action.newUserLogin;\r\n            let pass = action.newUserPass;\r\n\r\n            return {\r\n                ...state,\r\n                loginAndPassword: [...state.loginAndPassword,\r\n                {\r\n                    username: user,\r\n                    login: login,\r\n                    password: pass,\r\n                }]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setIsAuthAC = (isAuth) => ({ type: IS_AUTH, isAuth })\r\nexport const setIsUsAC = (isUs) => ({ type: IS_US, isUs})\r\nexport const newUserAC = (newUserName, newUserLogin, newUserPass) => ({ type: ADD_USER, newUserName, newUserLogin, newUserPass })\r\n\r\nexport default authReducer;","import { Button } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport '../Componetns/Login/Login.css';\r\n\r\nexport default class OTPgen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGenerate = this.handleGenerate.bind(this);\r\n        this.state = { random: '' };\r\n    }\r\n    handleGenerate() {\r\n        var digits = '0123456789';\r\n        let OTP = '';\r\n        for (let i = 0; i < 4; i++) {\r\n            OTP += digits[Math.floor(Math.random() * 10)];\r\n            this.setState({ random: OTP });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div align='center'>\r\n                <div>\r\n                    <Button onClick={this.handleGenerate.bind(this)}>Получить код</Button>\r\n                    <Box>Код: {this.state.random}</Box>\r\n                </div>\r\n                <Formik\r\n                    initialValues={{ kode: '' }}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        if (!values.kode) {\r\n                            errors.kode = 'The kode field is empty!!';\r\n                        } else if (values.kode != `${this.state.random}`) {\r\n                            errors.kode = 'The kode is not correct!';\r\n                        } return errors;\r\n                    }}>\r\n                    {({ values }) => (\r\n                        <Form>\r\n                            <Field className='otpForm'\r\n                                type=\"number\"\r\n                                name=\"kode\"\r\n                                maxlength=\"4\" />\r\n                            <ErrorMessage name=\"kode\" component=\"div\" />\r\n                            <br />\r\n                            {values.kode\r\n                                ? <Button onClick={\r\n                                    values.kode == `${this.state.random}` ?\r\n                                        this.props.handleClick : null}>LogIn</Button>\r\n                                : <Button disabled={true}>Login</Button>\r\n                            }\r\n\r\n\r\n                            <Button onClick={this.props.onClose}>Cansel</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport './Login.css';\r\nimport Button from '@mui/material/Button'\r\nimport { Redirect } from 'react-router'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport OTP from '../../Common/OTP';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '30%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst Login = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => setOpen(false);\r\n    if (localStorage.getItem('isAuth') === 'true') {\r\n        return <Redirect to={'/home'} />\r\n    }\r\n    let handleClick = () => {\r\n        localStorage.isAuth = true;\r\n        props.setIsAuth(true);\r\n    }\r\n    const myLog = [...props.isReg].map(l =>\r\n        <div>\r\n            name:{l.username} <br />\r\n            login(email):{l.login} <br />\r\n            password:{l.password}\r\n        </div>);\r\n\r\n    return (\r\n        <div className='loginForm'>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}>\r\n                <Box sx={style}>\r\n                    <Typography variant=\"h6\" align='center'>\r\n                        Введите код для того, что-бы войти?\r\n                    </Typography>\r\n                    <OTP handleClick={handleClick}\r\n                        onClose={handleClose} />\r\n                </Box>\r\n            </Modal>\r\n            <Button href=\"#Login\">Sign In</Button>\r\n            <Button href=\"#Registration\">Registration</Button>\r\n            <div className='loginBlock'>\r\n                <h2>Please enter your login(email) and password!</h2>\r\n                <Formik\r\n                    initialValues={{ email: '', password: '' }}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        if (!values.email) {\r\n                            errors.email = 'The email field is empty!';\r\n                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n                        ) {\r\n                            errors.email = 'Email is not entered correctly';\r\n                        }\r\n                        if (!values.password) {\r\n                            errors.password = 'The password field is empty!!';\r\n                        } return errors;\r\n                    }}\r\n                >\r\n                    {({ values }) => (\r\n                        <Form>\r\n                            <Field\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                            />\r\n                            <ErrorMessage name=\"email\" component=\"div\" />\r\n                            <br />\r\n                            <Field\r\n                                type=\"password\"\r\n                                name=\"password\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <br />\r\n                            <Button onClick={props.isReg.find(item =>\r\n                                item.login == values.email && item.password == values.password)\r\n                                ? handleOpen : null }>LogIn</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                <div>\r\n                    {myLog}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setIsAuthAC } from '../../redux/auth-reducer';\r\nimport Login from './Login';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n        isReg: state.isAuth.loginAndPassword,\r\n        isUs: state.isAuth.isUs\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\nconst LoginContainer = (props) => {\r\n    return (<div>\r\n        <div>\r\n            <Login\r\n                isAuth={props.isAuth}\r\n                setIsAuth={props.setIsAuth}\r\n                isReg={props.isReg}\r\n                isUs={props.isUs} />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","export default __webpack_public_path__ + \"static/media/pokelogo.08b3d8ee.png\";","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FormControlLabel, Switch, } from '@material-ui/core';\r\n\r\nlet HeaderLogin = (props) => {\r\n    let handleClick = () => {\r\n        localStorage.isAuth = false;\r\n        props.setIsAuth(false);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.isAuth ?\r\n                <div>\r\n                    {props.isUs}\r\n                </div> : <div>offLne</div>\r\n            }\r\n            {localStorage.getItem('isAuth') == 'true'\r\n                ? <FormControlLabel  //переключение logIn, logAut\r\n                    control={\r\n                        <Switch\r\n                            checked={localStorage.isAuth}\r\n                            onChange={handleClick}\r\n                            aria-label=\"login switch\"\r\n                        />}\r\n                    label={'Выйти'} />\r\n                : <FormControlLabel disabled\r\n                    control={\r\n                        <Switch />}\r\n                    label={<NavLink to={'/login'}></NavLink>} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderLogin;","import * as React from 'react';\r\nimport pokelogo from '../../assets/images/pokelogo.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { setIsAuthAC } from '../../redux/auth-reducer';\r\nimport './Header.css';\r\nimport { connect } from \"react-redux\";\r\nimport HeaderLogin from '../Login/HeaderLogin';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n        isUs: state.isAuth.isUs\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <div className='back'>\r\n                {/*<div className='logo'>\r\n                    <NavLink to={'/home'}><img src={pokelogo} /></NavLink>\r\n    </div>*/}\r\n                <div className='header-text'>\r\n                    <NavLink to={'/home'}>\r\n                        <h1>\r\n                            Ultra Super Pokemon 5G Pro\r\n                        </h1>\r\n                    </NavLink>\r\n                </div>\r\n                <div className='login-block'>\r\n                    <HeaderLogin isAuth={props.isAuth}\r\n                        isUs={props.isUs}\r\n                        setIsAuth={props.setIsAuth} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux';\r\nimport { setIsAuthAC } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component {\r\n    refreshAuth() {\r\n        let isAuth = this.props.isAuth;\r\n        debugger;\r\n         if (localStorage.getItem('isAuth' == 'true')) {\r\n            isAuth = 'true'} else { isAuth = 'false' }\r\n    }\r\n    componentDidMount() {\r\n        this.refreshAuth();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.isAuth == prevProps.isAuth) {\r\n        this.refreshAuth();\r\n        }\r\n    }\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth.isAuth,\r\n        isUs: state.isAuth.isUs\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIsAuth: (isAuth) => {\r\n            dispatch(setIsAuthAC(isAuth));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n","import * as React from 'react';\r\nimport './Login.css';\r\nimport Button from '@mui/material/Button'\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst Registration = (props) => {\r\n    let myLog = [...props.loginAndPassword].reverse().map(l =>\r\n        <div>\r\n            name:{l.username} <br />\r\n            login(email):{l.login} <br />\r\n            password:{l.password}\r\n        </div>);\r\n    let addNewUser = (value) => {\r\n        if (value.newUserPass === value.newUserPass2) {\r\n            props.addUser(value.newUserName, value.newUserLogin, value.newUserPass);\r\n            alert('Все ОК');\r\n        }\r\n        else if (value.newUserPass !== value.newUserPass2)\r\n            alert('Пароли не совпадают');\r\n    }\r\n    return (\r\n        <div className='registrationForm'>\r\n            <Button href=\"#Login\">Sign In</Button>\r\n            <Button href=\"#Registration\">Registration</Button>\r\n            <div>\r\n                <AddUserFormRedux onSubmit={addNewUser} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyUser = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className='registrationBlock'>\r\n                <h2>Enter the registration details.</h2>\r\n                <div className='inputWrapper'>\r\n                    <Field className='fieldEmail'\r\n                        name='newUserName'\r\n                        component='input'\r\n                        type='text'\r\n                        placeholder='Enter your name' />\r\n                    <br />\r\n                    <Field className='inputEmail'\r\n                        name='newUserLogin'\r\n                        type='email'\r\n                        component='input'\r\n                        placeholder='Your email' />\r\n                    <br />\r\n                    <input className='inputPass'\r\n                        name='newUserPass'\r\n                        component='input'\r\n                        type=\"password\"\r\n                        placeholder='Your password' />\r\n                    <br />\r\n                    <Field className='inputPassTo'\r\n                        name='newUserPass2'\r\n                        component='input'\r\n                        type=\"text\"\r\n                        placeholder='Repeat the password' />\r\n                    <br />\r\n                    <div>\r\n                        <button>Registration</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddUserFormRedux = reduxForm({\r\n    form: 'userAddForm',\r\n})(MyUser);\r\n\r\nexport default Registration;","import { connect } from 'react-redux';\r\nimport { newUserAC, } from \"../../redux/auth-reducer\";\r\nimport Registration from './Registration';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.isAuth,\r\n        loginAndPassword: state.isAuth.loginAndPassword,\r\n        newUserName: state.isAuth.newUserName,\r\n        newUserLogin: state.isAuth.newUserLogin,\r\n        newUserPass: state.isAuth.newUserPass,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUser: (newUserName, newUserLogin, newUserPass, newId) => {\r\n            dispatch(newUserAC(newUserName, newUserLogin, newUserPass, newId));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\r\n","import './App.css';\r\nimport * as React from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport { Route } from 'react-router-dom';\r\nimport PokeCardContainer from './Componetns/Content/Card/PokeCardContainer';\r\nimport CardContainer from './Componetns/Content/Card/CardContainer';\r\nimport LoginContainer from './Componetns/Login/LoginContainer';\r\nimport HeaderContainer from './Componetns/Header/HeaderContainer';\r\nimport RegistrationContainer from './Componetns/Login/RegistrationContainer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <HeaderContainer />\r\n      </header>\r\n      <div className='App-navBar'>\r\n      </div>\r\n      <div className='App-content'>\r\n        <div>\r\n          <Redirect from=\"/\" to=\"/login\" />\r\n          <Route path='/home' render={() => <PokeCardContainer />} />\r\n          <Route path='/login' render={() => <LoginContainer />} />\r\n          <Route path='/cards/:pokeId?' render={() => <CardContainer />} />\r\n          <Route path='/registration' render={() => <RegistrationContainer />} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const SET_TYPE_POKE = 'SET_TYPE_POKE';\r\nconst SET_SUBTYPE_POKE = 'SET_SUBTYPE_POKE';\r\n\r\nlet initialState = {\r\n    typepoke: [],\r\n    subtypepoke: [],\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TYPE_POKE: {\r\n            return { ...state, typepoke: action.typepoke }\r\n        }\r\n        case SET_SUBTYPE_POKE: {\r\n            return { ...state, subtypepoke: action.subtypepoke }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTypeAC = (typepoke) => ({ type: SET_TYPE_POKE, typepoke });\r\nexport const setSubTypeAC = (subtypepoke) => ({ type: SET_SUBTYPE_POKE, subtypepoke });\r\n\r\nexport default navbarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport pokecardReducer from \"./pokecard-reducer\";\r\nimport cardReducer from \"./card-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    pokemonCardPage: pokecardReducer,\r\n    navbarPage: navbarReducer,\r\n    pokemonsProfilePage: cardReducer,\r\n    isAuth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport './index.css';\r\nimport store from './redux/redux-store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fontsource/roboto/500.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      \r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>\r\n      \r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}